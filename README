Fluid 960 Grid System
Version 1.0.4
2009-03-31

Created by Stephen Bau. Based on the work of Nathan Smith.

============================================================================

Thank you for downloading the Fluid 960 Grid System. Note that these templates
have been built upon the work of Nathan Smith and his 960 Grid System using
effects from the MooTools and jQuery JavaScript libraries. The idea for building
these templates was inspired by Andy Clarke, author of Transcending CSS, who 
advocates a content-out approach to rapid interactive prototyping, crediting
Jason Santa Maria with the grey box methodology.

These templates are offered free of charge in accordance
with the applicable licenses for 960 Grid System, MooTools and jQuery.

The Fluid Grid System is released under the GPL/MIT Licenses.
960 Grid System is released under the GPL/MIT Licenses: http://960.gs/
MooTools is released under the MIT License: http://mootools.net/
jQuery is released under the GPL/MIT Licenses: http://jquery.com/

Transcending CSS:
http://transcendingcss.com/

Jason Santa Maria: 
http://www.jasonsantamaria.com/archive/2004/05/24/grey_box_method.php

============================================================================



960 Grid System
Version 1.0
2008-03-24

Created by Nathan Smith. See the official site for more info: http://960.gs/

============================================================================

Thank you for downloading the 960 Grid System. I hope it helps to streamline
web development workflow. Enclosed in the bundle are printable sketch sheets
and template files for Adobe Fireworks and Photoshop, OmniGraffle and Visio.

Also included is a lightweight CSS file, which contains the grid dimensions.
To use this file, simply include the 960.css in the <head> of the HTML page.	
You may also use the reset.css and text.css files, or opt to leave them out.
Here is an example of the XHTML code necessary to incorporate the CSS files:

<head>
<link rel="stylesheet" type="text/css" media="all" href="css/reset.css" />
<link rel="stylesheet" type="text/css" media="all" href="css/text.css" />
<link rel="stylesheet" type="text/css" media="all" href="css/960.css" />
</head>

It is worth noting that these styles do not automatically make up a finished
site design. They are simply a starting point, ideally for rapid prototyping
or as a basis for creating your own designs. You should not feel constrained
by the way I have built the initial code. If you disagree with how something
has been done, feel free to revise it for the needs of your particular site.

The files in the 960 Grid System are free of charge, licensed under GPL/MIT.

============================================================================

Special thanks to Eric Meyer for his comprehensive browser reset stylesheet.

http://meyerweb.com/eric/tools/css/reset/

============================================================================





============================================================================

Symphony 2

Version: 2.0.2 (build 375)
Build Date: 6th March 2009
Github Repository: http://github.com/symphony/symphony-2/tree/optmisation


[SYNOPSIS]

Symphony is a PHP & MySQL based CMS that utilises XML and XSLT as it's core 
technologies. This repository represents version 2.0.2 and is considered stable.

Visit the forum at http://overture21.com/forum/ 


** See further down for installation instructions **

[UPDATING VIA GIT]

1. Use the following command to get Extensions up to date

	git submodule init
	git submodule update

Finally, follow from step 5 below.


[UPDATING]

Follow the instructions below if you are updating from Symphony version 2.0.1 (non Git)

1. Backup /symphony/.htaccess

2. Upload /symphony, index.php & update.php, replacing what is already on your server.

3. (Optional) If you require the dynamic image manipulation features, removed as of this
release, be sure up upload extensions/jit_image_manipulation.

4. Put the backed up .htaccess file into the new /symphony folder

5. Go to http://yoursite.com/update.php to complete the update process.

6. Dance like it's 1999!



[INSTALLING FROM GIT]

1. Clone the git repository to the location you desire using:

		git clone git://github.com/symphony/symphony-2.git
		
	Should you wish to make contributions back to the project, feel free to fork the
	master tree, instead of cloning, and issue pull requests via github.


	The following repositories are included as submodules:

		- Maintenance Mode: http://github.com/pointybeard/maintenance_mode
		
		- Select Box Link Field: http://github.com/pointybeard/selectbox_link_field
		
		- Export Ensemble: http://github.com/pointybeard/export_ensemble
		
		- Markdown: http://github.com/pointybeard/markdown
		
		- JIT Image Manipulation: http://github.com/pointybeard/jit_image_manipulation		
		

3. Run the following commands to ensure the submodules are cloned:

		git submodule init
		git submodule update
		

4. (Optional) If you would like the default theme (http://github.com/symphony/workspace) 
installed as well, you will need to use the following command from within the Symphony 2 
folder you just created:

		git clone git://github.com/symphony/workspace.git
		

5. Follow from step 2 below


[INSTALLATION]

1. This step assumes you downloaded a zip archive from the Symphony website 
   (http://symphony21.com). Upload the following files and 
   directories to the root directory of your website:

     - index.php
     - install.php
     - /symphony
     - /workspace
     - /extensions

   (Alternatively, you can upload the .zip archive to the same location and
   run 'unzip' from the command line.)
	
   Note: You can leave /workspace out if you do not want the default theme.

2. Point your web browser at http://yourwebsite.com/install.php and provide
   details for establishing a database connection and about your server
   environment.

3. Celebrate!

